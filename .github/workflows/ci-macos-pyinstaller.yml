name: macOS PyInstaller Build (x86_64)

on:
  push:
    branches: [ main, add/macos-ci-from-main ]
  pull_request:
    branches: [ main, add/macos-ci-from-main ]
  workflow_dispatch:

jobs:
  build-x86_64:
    name: Build (x86_64)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - name: Download and install python.org universal2 Python 3.11
        run: |
          set -eux
          curl -LO https://www.python.org/ftp/python/3.11.8/python-3.11.8-macos11.pkg
          sudo installer -pkg python-3.11.8-macos11.pkg -target /
          echo "/usr/local/bin" >> $GITHUB_PATH
          python3 --version
          which python3
          python3 -c "import sys; print(sys.executable)"

      - name: Install build deps
        run: |
          set -eux
          arch -x86_64 /usr/local/bin/python3 -m venv .venv_x86_64
          source .venv_x86_64/bin/activate
          arch -x86_64 pip install --upgrade pip
          arch -x86_64 pip install --upgrade pyinstaller
          if [ -f requirements.txt ]; then
            arch -x86_64 pip install -r requirements.txt
          else
            arch -x86_64 pip install reportlab music21 pillow mido pygame
          fi
          arch -x86_64 python3 -c "import sys,platform; print(sys.executable); print(platform.machine())" > build-env.txt || true
          rm -rf build dist *.spec || true
          arch -x86_64 pip freeze > installed-packages.txt || true
          ls -la > ls-root.txt || true

      - name: Build with PyInstaller (x86_64 onefile)
        run: |
          set -eux
          source .venv_x86_64/bin/activate
          echo "== PYINSTALLER: ONEFILE BUILD ==" > build-onefile.log
          arch -x86_64 python3 -m PyInstaller --noconfirm --clean --onefile TEST.py --add-data assets/title.png:. --add-data assets/ico.png:. --add-data assets/fonts:assets/fonts --hidden-import=mido --hidden-import=mido.backends.rtmidi --collect-all mido --icon myicon.icns >> build-onefile.log 2>&1 || true
          mv dist/TEST dist/TEST-x86_64 || true
          cp build-onefile.log build-onefile-x86_64.log || true

      - name: Package artifact (tar.gz)
        run: |
          set -eux
          mkdir -p out-dist
          if [ -f dist/TEST-x86_64 ]; then
            cp dist/TEST-x86_64 out-dist/TEST
            tar -C out-dist -czf driveanalyzer-x86_64.tar.gz .
            ls -la driveanalyzer-x86_64.tar.gz
          else
            echo "Warning: onefile binary not found for x86_64"
            ls -la dist || true
          fi

      - name: Upload artifact (tar.gz)
        uses: actions/upload-artifact@v4
        with:
          name: driveanalyzer-x86_64
          path: driveanalyzer-x86_64.tar.gz

      - name: Upload build logs and diagnostics
        uses: actions/upload-artifact@v4
        with:
          name: driveanalyzer-x86_64-logs
          path: |
            build-onefile-x86_64.log
            build-env.txt
            ls-root.txt

